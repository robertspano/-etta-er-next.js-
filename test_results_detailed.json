{
  "summary": {
    "total": 215,
    "passed": 175,
    "failed": 40,
    "success_rate": 81.3953488372093
  },
  "results": [
    {
      "test": "GET /professionals/electrician",
      "success": false,
      "details": "Page accessible but invalid HTML content (Status: 200)",
      "timestamp": "2025-09-02T13:22:19.851654",
      "response_data": null
    },
    {
      "test": "GET /professionals/plumber",
      "success": false,
      "details": "Page accessible but invalid HTML content (Status: 200)",
      "timestamp": "2025-09-02T13:22:20.712470",
      "response_data": null
    },
    {
      "test": "GET /professionals/painter",
      "success": false,
      "details": "Page not accessible (Status: 404)",
      "timestamp": "2025-09-02T13:22:22.410910",
      "response_data": null
    },
    {
      "test": "GET /professionals/carpenter",
      "success": false,
      "details": "Page not accessible (Status: 404)",
      "timestamp": "2025-09-02T13:22:22.514309",
      "response_data": null
    },
    {
      "test": "GET /professionals/mason",
      "success": false,
      "details": "Page not accessible (Status: 404)",
      "timestamp": "2025-09-02T13:22:22.615087",
      "response_data": null
    },
    {
      "test": "Backend Regression - GET /",
      "success": true,
      "details": "Endpoint working correctly",
      "timestamp": "2025-09-02T13:22:22.631734",
      "response_data": null
    },
    {
      "test": "Backend Regression - GET /health",
      "success": true,
      "details": "Endpoint working correctly",
      "timestamp": "2025-09-02T13:22:22.637862",
      "response_data": null
    },
    {
      "test": "Backend Regression - GET /services",
      "success": true,
      "details": "Endpoint working correctly",
      "timestamp": "2025-09-02T13:22:22.680230",
      "response_data": null
    },
    {
      "test": "Backend Regression - GET /stats",
      "success": true,
      "details": "Endpoint working correctly",
      "timestamp": "2025-09-02T13:22:22.705135",
      "response_data": null
    },
    {
      "test": "Backend Regression - GET /testimonials",
      "success": true,
      "details": "Endpoint working correctly",
      "timestamp": "2025-09-02T13:22:22.718982",
      "response_data": null
    },
    {
      "test": "GET /api/",
      "success": true,
      "details": "Status: 200, Message: BuildConnect API is running",
      "timestamp": "2025-09-02T13:22:22.764838",
      "response_data": null
    },
    {
      "test": "GET /api/health",
      "success": true,
      "details": "Status: 200, Health: healthy",
      "timestamp": "2025-09-02T13:22:22.810936",
      "response_data": null
    },
    {
      "test": "GET /api/services (English)",
      "success": true,
      "details": "Retrieved 9 services in English",
      "timestamp": "2025-09-02T13:22:22.823499",
      "response_data": null
    },
    {
      "test": "GET /api/services (Icelandic)",
      "success": true,
      "details": "Retrieved 9 services in Icelandic",
      "timestamp": "2025-09-02T13:22:22.834356",
      "response_data": null
    },
    {
      "test": "GET /api/services (Default)",
      "success": true,
      "details": "Default language fallback works (English)",
      "timestamp": "2025-09-02T13:22:22.846722",
      "response_data": null
    },
    {
      "test": "POST /api/projects (Valid)",
      "success": true,
      "details": "Project created with ID: f436f720-3eaf-472f-820b-dccc5d991019",
      "timestamp": "2025-09-02T13:22:22.897210",
      "response_data": null
    },
    {
      "test": "POST /api/projects (Invalid)",
      "success": true,
      "details": "Validation error returned as expected",
      "timestamp": "2025-09-02T13:22:22.904937",
      "response_data": null
    },
    {
      "test": "GET /api/projects",
      "success": true,
      "details": "Retrieved 20 projects",
      "timestamp": "2025-09-02T13:22:22.913155",
      "response_data": null
    },
    {
      "test": "GET /api/projects (Filtered)",
      "success": true,
      "details": "Filtered projects: 20",
      "timestamp": "2025-09-02T13:22:22.921508",
      "response_data": null
    },
    {
      "test": "GET /api/projects/{id}",
      "success": true,
      "details": "Retrieved project: Kitchen Renovation Project",
      "timestamp": "2025-09-02T13:22:22.970565",
      "response_data": null
    },
    {
      "test": "GET /api/stats",
      "success": true,
      "details": "Stats retrieved: 28 projects, 0 professionals",
      "timestamp": "2025-09-02T13:22:23.021661",
      "response_data": null
    },
    {
      "test": "GET /api/testimonials",
      "success": true,
      "details": "Retrieved 6 testimonials",
      "timestamp": "2025-09-02T13:22:23.028852",
      "response_data": null
    },
    {
      "test": "GET /api/testimonials/featured",
      "success": true,
      "details": "Retrieved 3 featured testimonials",
      "timestamp": "2025-09-02T13:22:23.076026",
      "response_data": null
    },
    {
      "test": "POST /api/auth/register (Customer)",
      "success": true,
      "details": "Customer registered: customer_1756819343@example.com",
      "timestamp": "2025-09-02T13:22:23.188129",
      "response_data": null
    },
    {
      "test": "POST /api/auth/register (Professional)",
      "success": true,
      "details": "Professional registered: professional_1756819343@example.com",
      "timestamp": "2025-09-02T13:22:23.308909",
      "response_data": null
    },
    {
      "test": "POST /api/auth/cookie/login (Customer)",
      "success": true,
      "details": "Customer login successful with cookie",
      "timestamp": "2025-09-02T13:22:23.413908",
      "response_data": null
    },
    {
      "test": "POST /api/auth/cookie/login (Professional)",
      "success": true,
      "details": "Professional login successful with cookie",
      "timestamp": "2025-09-02T13:22:23.518610",
      "response_data": null
    },
    {
      "test": "GET /api/auth/me (Customer)",
      "success": true,
      "details": "User info retrieved: customer_1756819343@example.com",
      "timestamp": "2025-09-02T13:22:23.526610",
      "response_data": null
    },
    {
      "test": "PUT /api/auth/profile",
      "success": true,
      "details": "Profile updated successfully",
      "timestamp": "2025-09-02T13:22:23.576709",
      "response_data": null
    },
    {
      "test": "POST /api/auth/switch-role",
      "success": true,
      "details": "Role switched to professional",
      "timestamp": "2025-09-02T13:22:23.586282",
      "response_data": null
    },
    {
      "test": "GET /api/auth/customer-only (Customer)",
      "success": true,
      "details": "Customer access correctly denied after role switch",
      "timestamp": "2025-09-02T13:22:23.634728",
      "response_data": null
    },
    {
      "test": "GET /api/auth/professional-only (Professional)",
      "success": true,
      "details": "Professional access granted",
      "timestamp": "2025-09-02T13:22:23.641908",
      "response_data": null
    },
    {
      "test": "GET /api/auth/admin-only (Customer Denied)",
      "success": true,
      "details": "Admin access correctly denied to customer",
      "timestamp": "2025-09-02T13:22:23.689996",
      "response_data": null
    },
    {
      "test": "GET /api/auth/me (Unauthenticated)",
      "success": true,
      "details": "Protected endpoint correctly requires authentication",
      "timestamp": "2025-09-02T13:22:23.750523",
      "response_data": null
    },
    {
      "test": "POST /api/auth/cookie/logout",
      "success": true,
      "details": "Logout successful",
      "timestamp": "2025-09-02T13:22:23.759238",
      "response_data": null
    },
    {
      "test": "Marketplace Customer Registration",
      "success": true,
      "details": "Customer registered successfully",
      "timestamp": "2025-09-02T13:22:23.827784",
      "response_data": null
    },
    {
      "test": "Marketplace Professional Registration",
      "success": true,
      "details": "Professional registered successfully",
      "timestamp": "2025-09-02T13:22:23.984205",
      "response_data": null
    },
    {
      "test": "Marketplace Customer Login",
      "success": true,
      "details": "Customer login successful",
      "timestamp": "2025-09-02T13:22:24.103238",
      "response_data": null
    },
    {
      "test": "Marketplace Professional Login",
      "success": true,
      "details": "Professional login successful",
      "timestamp": "2025-09-02T13:22:24.209032",
      "response_data": null
    },
    {
      "test": "POST /api/job-requests",
      "success": true,
      "details": "Job created with ID: c40d2365-7122-48d3-8afc-9ab6a63ac1f7",
      "timestamp": "2025-09-02T13:22:24.227159",
      "response_data": null
    },
    {
      "test": "GET /api/job-requests",
      "success": false,
      "details": "Request failed: 500, message='Attempt to decode JSON with unexpected mimetype: text/plain; charset=utf-8', url='https://icejobs.preview.emergentagent.com/api/job-requests/'",
      "timestamp": "2025-09-02T13:22:24.263187",
      "response_data": null
    },
    {
      "test": "GET /api/job-requests/{id}",
      "success": true,
      "details": "Retrieved job: Kitchen Sink Installation",
      "timestamp": "2025-09-02T13:22:24.273251",
      "response_data": null
    },
    {
      "test": "PUT /api/job-requests/{id}",
      "success": true,
      "details": "Job updated successfully",
      "timestamp": "2025-09-02T13:22:24.282826",
      "response_data": null
    },
    {
      "test": "GET /api/job-requests (Category Filter)",
      "success": false,
      "details": "Request failed: 500, message='Attempt to decode JSON with unexpected mimetype: text/plain; charset=utf-8', url='https://icejobs.preview.emergentagent.com/api/job-requests/?category=plumbing'",
      "timestamp": "2025-09-02T13:22:24.300885",
      "response_data": null
    },
    {
      "test": "POST /api/quotes",
      "success": false,
      "details": "Quote creation failed: 400",
      "timestamp": "2025-09-02T13:22:24.309215",
      "response_data": {
        "detail": "This job is no longer accepting quotes"
      }
    },
    {
      "test": "POST /api/messages",
      "success": true,
      "details": "Message sent: f64e2e2c-141a-4297-8216-844b4824cffd",
      "timestamp": "2025-09-02T13:22:24.385013",
      "response_data": null
    },
    {
      "test": "GET /api/messages/job/{id}",
      "success": true,
      "details": "Retrieved 1 messages",
      "timestamp": "2025-09-02T13:22:24.395172",
      "response_data": null
    },
    {
      "test": "GET /api/messages/conversations",
      "success": true,
      "details": "Retrieved 1 conversations",
      "timestamp": "2025-09-02T13:22:24.405531",
      "response_data": null
    },
    {
      "test": "GET /api/notifications",
      "success": true,
      "details": "Retrieved 0 notifications",
      "timestamp": "2025-09-02T13:22:24.455164",
      "response_data": null
    },
    {
      "test": "GET /api/notifications/stats",
      "success": true,
      "details": "Stats: 0 total, 0 unread",
      "timestamp": "2025-09-02T13:22:24.464240",
      "response_data": null
    },
    {
      "test": "PUT /api/notifications/mark-all-read",
      "success": true,
      "details": "Marked notifications as read: Marked 0 notifications as read",
      "timestamp": "2025-09-02T13:22:24.514183",
      "response_data": null
    },
    {
      "test": "POST /api/public/job-requests/draft (Guest)",
      "success": false,
      "details": "Draft created but no guest cookie set",
      "timestamp": "2025-09-02T13:22:24.524936",
      "response_data": null
    },
    {
      "test": "Public Wizard Validation (Short Title)",
      "success": true,
      "details": "Short title correctly rejected",
      "timestamp": "2025-09-02T13:22:24.576017",
      "response_data": null
    },
    {
      "test": "Public Wizard Validation (Short Description)",
      "success": true,
      "details": "Short description correctly rejected",
      "timestamp": "2025-09-02T13:22:24.584651",
      "response_data": null
    },
    {
      "test": "Authorization Test Setup (Guest A)",
      "success": false,
      "details": "No guest cookie set",
      "timestamp": "2025-09-02T13:22:24.594166",
      "response_data": null
    },
    {
      "test": "Public Wizard Rate Limiting",
      "success": false,
      "details": "Rate limiting not working: 12 requests allowed",
      "timestamp": "2025-09-02T13:22:24.944847",
      "response_data": null
    },
    {
      "test": "Authenticated User Login",
      "success": true,
      "details": "User logged in successfully",
      "timestamp": "2025-09-02T13:22:25.124640",
      "response_data": null
    },
    {
      "test": "Public Wizard (Authenticated User)",
      "success": false,
      "details": "Public endpoint failed for auth user: 422",
      "timestamp": "2025-09-02T13:22:25.132678",
      "response_data": {
        "detail": [
          {
            "type": "value_error",
            "loc": [
              "body"
            ],
            "msg": "Value error, License plate is required for automotive category",
            "input": {
              "category": "automotive",
              "title": "Car Repair Service Needed",
              "description": "Professional car repair service needed for engine diagnostics and potential repair work on vehicle",
              "postcode": "108"
            },
            "ctx": {
              "error": {}
            },
            "url": "https://errors.pydantic.dev/2.11/v/value_error"
          }
        ]
      }
    },
    {
      "test": "Public Wizard Category (handcraft)",
      "success": true,
      "details": "Category handcraft working correctly",
      "timestamp": "2025-09-02T13:22:25.141193",
      "response_data": null
    },
    {
      "test": "Public Wizard Category (bathroom)",
      "success": true,
      "details": "Category bathroom working correctly",
      "timestamp": "2025-09-02T13:22:25.190044",
      "response_data": null
    },
    {
      "test": "Public Wizard Category (automotive)",
      "success": true,
      "details": "Category automotive working correctly",
      "timestamp": "2025-09-02T13:22:25.238944",
      "response_data": null
    },
    {
      "test": "Public Wizard Category (majorProjects)",
      "success": true,
      "details": "Category majorProjects working correctly",
      "timestamp": "2025-09-02T13:22:25.247853",
      "response_data": null
    },
    {
      "test": "Public Wizard Category (cleaning)",
      "success": true,
      "details": "Category cleaning working correctly",
      "timestamp": "2025-09-02T13:22:25.298881",
      "response_data": null
    },
    {
      "test": "Public Wizard Category (housingAssociations)",
      "success": true,
      "details": "Category housingAssociations working correctly",
      "timestamp": "2025-09-02T13:22:25.307898",
      "response_data": null
    },
    {
      "test": "Public Wizard Category (moving)",
      "success": true,
      "details": "Category moving working correctly",
      "timestamp": "2025-09-02T13:22:25.315797",
      "response_data": null
    },
    {
      "test": "POST /api/public/job-requests/draft (Automotive)",
      "success": false,
      "details": "Draft created but no guest cookie set",
      "timestamp": "2025-09-02T13:22:25.364068",
      "response_data": null
    },
    {
      "test": "POST /api/public/job-requests/draft (Regular)",
      "success": false,
      "details": "Draft created but no guest cookie set",
      "timestamp": "2025-09-02T13:22:25.373296",
      "response_data": null
    },
    {
      "test": "Automotive Validation (Missing License Plate)",
      "success": true,
      "details": "Missing license plate correctly rejected",
      "timestamp": "2025-09-02T13:22:25.421960",
      "response_data": null
    },
    {
      "test": "Automotive Validation (Short License Plate)",
      "success": true,
      "details": "Short license plate correctly rejected",
      "timestamp": "2025-09-02T13:22:25.430429",
      "response_data": null
    },
    {
      "test": "Automotive Validation (Long License Plate)",
      "success": true,
      "details": "Long license plate correctly rejected",
      "timestamp": "2025-09-02T13:22:25.478506",
      "response_data": null
    },
    {
      "test": "Automotive Validation (Invalid Characters)",
      "success": true,
      "details": "Invalid license plate characters correctly rejected",
      "timestamp": "2025-09-02T13:22:25.486714",
      "response_data": null
    },
    {
      "test": "Regular Validation (Missing Title)",
      "success": true,
      "details": "Missing title correctly rejected",
      "timestamp": "2025-09-02T13:22:25.494775",
      "response_data": null
    },
    {
      "test": "Regular Validation (Missing Description)",
      "success": true,
      "details": "Missing description correctly rejected",
      "timestamp": "2025-09-02T13:22:25.544554",
      "response_data": null
    },
    {
      "test": "Vehicle Lookup (TEST123)",
      "success": true,
      "details": "Found: Tesla Model 3 2022",
      "timestamp": "2025-09-02T13:22:26.051764",
      "response_data": null
    },
    {
      "test": "Vehicle Lookup (ABC123)",
      "success": true,
      "details": "Found: Toyota Corolla 2019",
      "timestamp": "2025-09-02T13:22:26.560018",
      "response_data": null
    },
    {
      "test": "Vehicle Lookup (XYZ789)",
      "success": true,
      "details": "Found: Volkswagen Golf 2021",
      "timestamp": "2025-09-02T13:22:27.066876",
      "response_data": null
    },
    {
      "test": "Vehicle Lookup (INVALID)",
      "success": true,
      "details": "Vehicle INVALID correctly not found",
      "timestamp": "2025-09-02T13:22:27.614854",
      "response_data": null
    },
    {
      "test": "Vehicle Lookup Rate Limiting",
      "success": false,
      "details": "Rate limiting not working - all 12 requests succeeded",
      "timestamp": "2025-09-02T13:22:27.878569",
      "response_data": null
    },
    {
      "test": "Validation (Empty plate)",
      "success": true,
      "details": "Invalid plate '' correctly rejected",
      "timestamp": "2025-09-02T13:22:27.885026",
      "response_data": null
    },
    {
      "test": "Validation (Too short (1 char))",
      "success": true,
      "details": "Invalid plate 'A' correctly rejected",
      "timestamp": "2025-09-02T13:22:27.930561",
      "response_data": null
    },
    {
      "test": "Validation (Too long (12 chars))",
      "success": true,
      "details": "Invalid plate 'TOOLONGPLATE' correctly rejected",
      "timestamp": "2025-09-02T13:22:27.935409",
      "response_data": null
    },
    {
      "test": "Validation (Invalid characters (hyphen))",
      "success": false,
      "details": "Expected 400, got 200",
      "timestamp": "2025-09-02T13:22:28.441724",
      "response_data": {
        "found": false
      }
    },
    {
      "test": "Validation (Invalid characters (space))",
      "success": false,
      "details": "Expected 400, got 200",
      "timestamp": "2025-09-02T13:22:28.487683",
      "response_data": {
        "found": false
      }
    },
    {
      "test": "Validation (Country NO)",
      "success": true,
      "details": "Unsupported country NO correctly rejected",
      "timestamp": "2025-09-02T13:22:28.492795",
      "response_data": null
    },
    {
      "test": "Validation (Country DK)",
      "success": true,
      "details": "Unsupported country DK correctly rejected",
      "timestamp": "2025-09-02T13:22:28.539916",
      "response_data": null
    },
    {
      "test": "Validation (Country SE)",
      "success": true,
      "details": "Unsupported country SE correctly rejected",
      "timestamp": "2025-09-02T13:22:28.545209",
      "response_data": null
    },
    {
      "test": "Validation (Country FI)",
      "success": true,
      "details": "Unsupported country FI correctly rejected",
      "timestamp": "2025-09-02T13:22:28.590532",
      "response_data": null
    },
    {
      "test": "Validation (Country US)",
      "success": false,
      "details": "Expected 400, got 429",
      "timestamp": "2025-09-02T13:22:28.636754",
      "response_data": {
        "detail": "Rate limit exceeded. Maximum 10 lookups per minute."
      }
    },
    {
      "test": "Validation (Missing Plate)",
      "success": true,
      "details": "Missing plate parameter correctly rejected",
      "timestamp": "2025-09-02T13:22:28.682664",
      "response_data": null
    },
    {
      "test": "Automotive Flow - Vehicle Lookup",
      "success": true,
      "details": "Vehicle found: Tesla Model 3",
      "timestamp": "2025-09-02T13:22:28.688383",
      "response_data": null
    },
    {
      "test": "Automotive Flow - Create Draft",
      "success": false,
      "details": "Draft created but no guest cookie",
      "timestamp": "2025-09-02T13:22:28.738163",
      "response_data": null
    },
    {
      "test": "Reviews Sample Data Check",
      "success": true,
      "details": "Found 1 existing reviews",
      "timestamp": "2025-09-02T13:22:28.795134",
      "response_data": null
    },
    {
      "test": "GET /api/reviews (Basic)",
      "success": true,
      "details": "Retrieved 4 reviews for homepage",
      "timestamp": "2025-09-02T13:22:28.817495",
      "response_data": null
    },
    {
      "test": "Homepage Reviews Format Validation",
      "success": true,
      "details": "ReviewListResponse format matches frontend expectations",
      "timestamp": "2025-09-02T13:22:28.817537",
      "response_data": null
    },
    {
      "test": "GET /api/reviews (Limit Parameter)",
      "success": true,
      "details": "Limit parameter working: 2 reviews returned",
      "timestamp": "2025-09-02T13:22:28.876853",
      "response_data": null
    },
    {
      "test": "GET /api/reviews (Locale Parameter)",
      "success": true,
      "details": "Locale parameter accepted: 4 reviews returned",
      "timestamp": "2025-09-02T13:22:28.899676",
      "response_data": null
    },
    {
      "test": "GET /api/reviews/{id}",
      "success": true,
      "details": "Individual review retrieved: Outstanding house extension project",
      "timestamp": "2025-09-02T13:22:28.965449",
      "response_data": null
    },
    {
      "test": "GET /api/reviews/{id} (Not Found)",
      "success": true,
      "details": "Non-existent review returns 404",
      "timestamp": "2025-09-02T13:22:28.971554",
      "response_data": null
    },
    {
      "test": "GET /api/reviews/professional/{id}",
      "success": true,
      "details": "Retrieved 1 reviews for professional",
      "timestamp": "2025-09-02T13:22:29.027721",
      "response_data": null
    },
    {
      "test": "Professional Reviews Filtering",
      "success": true,
      "details": "All reviews belong to correct professional",
      "timestamp": "2025-09-02T13:22:29.027770",
      "response_data": null
    },
    {
      "test": "Professional Reviews (Limit)",
      "success": true,
      "details": "Limit parameter working: 1 reviews",
      "timestamp": "2025-09-02T13:22:29.038103",
      "response_data": null
    },
    {
      "test": "Professional Reviews (Not Found)",
      "success": true,
      "details": "Non-existent professional returns empty list",
      "timestamp": "2025-09-02T13:22:29.045033",
      "response_data": null
    },
    {
      "test": "Review Test Customer Registration",
      "success": true,
      "details": "Customer registered for review testing",
      "timestamp": "2025-09-02T13:22:29.153594",
      "response_data": null
    },
    {
      "test": "Review Test Professional Registration",
      "success": true,
      "details": "Professional registered for review testing",
      "timestamp": "2025-09-02T13:22:29.221424",
      "response_data": null
    },
    {
      "test": "Review Test Customer Login",
      "success": true,
      "details": "Customer logged in for review testing",
      "timestamp": "2025-09-02T13:22:29.328627",
      "response_data": null
    },
    {
      "test": "Review Test Professional Login",
      "success": true,
      "details": "Professional logged in for review testing",
      "timestamp": "2025-09-02T13:22:29.477411",
      "response_data": null
    },
    {
      "test": "POST /api/reviews (Unauthenticated)",
      "success": false,
      "details": "Expected 401, got: 403",
      "timestamp": "2025-09-02T13:22:29.485075",
      "response_data": {
        "detail": "Only customers can create reviews"
      }
    },
    {
      "test": "POST /api/reviews (Professional Denied)",
      "success": true,
      "details": "Professionals correctly cannot create reviews",
      "timestamp": "2025-09-02T13:22:29.492005",
      "response_data": null
    },
    {
      "test": "Review Creation Validation (Short Title)",
      "success": true,
      "details": "Short title correctly rejected",
      "timestamp": "2025-09-02T13:22:29.540418",
      "response_data": null
    },
    {
      "test": "Review Creation Validation (Invalid Rating)",
      "success": true,
      "details": "Invalid rating correctly rejected",
      "timestamp": "2025-09-02T13:22:29.548117",
      "response_data": null
    },
    {
      "test": "PUT /api/reviews/{id}/moderate (Unauthenticated)",
      "success": false,
      "details": "Expected 401, got: 403",
      "timestamp": "2025-09-02T13:22:29.612028",
      "response_data": {
        "detail": "Admin access required"
      }
    },
    {
      "test": "Review Moderation API Structure",
      "success": true,
      "details": "Moderation endpoint exists and requires proper authentication",
      "timestamp": "2025-09-02T13:22:29.612086",
      "response_data": null
    },
    {
      "test": "Reviews Authentication & Authorization",
      "success": true,
      "details": "Authentication and authorization rules properly implemented",
      "timestamp": "2025-09-02T13:22:29.612102",
      "response_data": null
    },
    {
      "test": "ReviewListResponse Format",
      "success": true,
      "details": "Response format matches frontend expectations",
      "timestamp": "2025-09-02T13:22:29.670031",
      "response_data": null
    },
    {
      "test": "Sample Reviews Data",
      "success": true,
      "details": "Found 4 sample reviews",
      "timestamp": "2025-09-02T13:22:29.692988",
      "response_data": null
    },
    {
      "test": "Review Relationships",
      "success": true,
      "details": "Reviews have proper company and reviewer relationships",
      "timestamp": "2025-09-02T13:22:29.693028",
      "response_data": null
    },
    {
      "test": "Professional Reviews Consistency",
      "success": true,
      "details": "All 1 reviews belong to correct professional",
      "timestamp": "2025-09-02T13:22:29.742674",
      "response_data": null
    },
    {
      "test": "POST /api/auth/send-login-link (Valid Email)",
      "success": true,
      "details": "Login link endpoint working correctly - Status: 200, Message: 'If an account with this email exists, a login code has been sent', Email: test@example.is",
      "timestamp": "2025-09-02T13:22:31.277114",
      "response_data": null
    },
    {
      "test": "POST /api/auth/send-login-link (Invalid Email)",
      "success": true,
      "details": "Invalid email format correctly rejected with 422 status",
      "timestamp": "2025-09-02T13:22:31.323850",
      "response_data": null
    },
    {
      "test": "POST /api/auth/send-login-link (Missing Email)",
      "success": true,
      "details": "Missing email field correctly rejected with 422 status",
      "timestamp": "2025-09-02T13:22:31.330599",
      "response_data": null
    },
    {
      "test": "POST /api/auth/send-login-link (Security Test)",
      "success": true,
      "details": "Endpoint returns success message regardless of user existence (good security practice)",
      "timestamp": "2025-09-02T13:22:31.379602",
      "response_data": null
    },
    {
      "test": "Verki User Exists Check",
      "success": true,
      "details": "User verki@verki.is exists in database",
      "timestamp": "2025-09-02T13:22:31.482045",
      "response_data": null
    },
    {
      "test": "Verki User Creation",
      "success": false,
      "details": "Unexpected response: 400",
      "timestamp": "2025-09-02T13:22:31.530589",
      "response_data": {
        "detail": "REGISTER_USER_ALREADY_EXISTS"
      }
    },
    {
      "test": "Password Login Success",
      "success": true,
      "details": "Password login successful for verki@verki.is",
      "timestamp": "2025-09-02T13:22:31.608779",
      "response_data": null
    },
    {
      "test": "Password Login Success",
      "success": true,
      "details": "Password login successful for verki@verki.is",
      "timestamp": "2025-09-02T13:22:31.715332",
      "response_data": null
    },
    {
      "test": "Password Auth User Data",
      "success": true,
      "details": "Successfully retrieved user data for verki@verki.is",
      "timestamp": "2025-09-02T13:22:31.762548",
      "response_data": null
    },
    {
      "test": "Passwordless Still Works",
      "success": true,
      "details": "Passwordless login code sent successfully to verki@verki.is",
      "timestamp": "2025-09-02T13:22:33.216473",
      "response_data": null
    },
    {
      "test": "POST /api/auth/register-company (Valid Data)",
      "success": false,
      "details": "Registration failed: 500",
      "timestamp": "2025-09-02T13:22:33.223813",
      "response_data": {
        "detail": "Failed to register company: "
      }
    },
    {
      "test": "Company Registration (8-digit phone)",
      "success": false,
      "details": "8-digit phone rejected: 500",
      "timestamp": "2025-09-02T13:22:33.270714",
      "response_data": {
        "detail": "Failed to register company: "
      }
    },
    {
      "test": "Company ID Validation (9 digits - too short)",
      "success": true,
      "details": "Invalid company ID correctly rejected",
      "timestamp": "2025-09-02T13:22:33.317413",
      "response_data": null
    },
    {
      "test": "Company ID Validation (11 digits - too long)",
      "success": true,
      "details": "Invalid company ID correctly rejected",
      "timestamp": "2025-09-02T13:22:33.363872",
      "response_data": null
    },
    {
      "test": "Company ID Validation (contains letter)",
      "success": true,
      "details": "Invalid company ID correctly rejected",
      "timestamp": "2025-09-02T13:22:33.369500",
      "response_data": null
    },
    {
      "test": "Company ID Validation (9 digits with dashes)",
      "success": true,
      "details": "Invalid company ID correctly rejected",
      "timestamp": "2025-09-02T13:22:33.415829",
      "response_data": null
    },
    {
      "test": "Company ID Validation (empty company ID)",
      "success": true,
      "details": "Invalid company ID correctly rejected",
      "timestamp": "2025-09-02T13:22:33.421388",
      "response_data": null
    },
    {
      "test": "Phone Validation (6 digits - too short)",
      "success": true,
      "details": "Invalid phone correctly rejected",
      "timestamp": "2025-09-02T13:22:33.426660",
      "response_data": null
    },
    {
      "test": "Phone Validation (9 digits - too long)",
      "success": true,
      "details": "Invalid phone correctly rejected",
      "timestamp": "2025-09-02T13:22:33.472570",
      "response_data": null
    },
    {
      "test": "Phone Validation (contains letter)",
      "success": true,
      "details": "Invalid phone correctly rejected",
      "timestamp": "2025-09-02T13:22:33.478160",
      "response_data": null
    },
    {
      "test": "Phone Validation (empty phone)",
      "success": true,
      "details": "Invalid phone correctly rejected",
      "timestamp": "2025-09-02T13:22:33.484360",
      "response_data": null
    },
    {
      "test": "Email Validation (missing @ symbol)",
      "success": true,
      "details": "Invalid email correctly rejected",
      "timestamp": "2025-09-02T13:22:33.530969",
      "response_data": null
    },
    {
      "test": "Email Validation (missing domain)",
      "success": true,
      "details": "Invalid email correctly rejected",
      "timestamp": "2025-09-02T13:22:33.536896",
      "response_data": null
    },
    {
      "test": "Email Validation (missing local part)",
      "success": true,
      "details": "Invalid email correctly rejected",
      "timestamp": "2025-09-02T13:22:33.583592",
      "response_data": null
    },
    {
      "test": "Email Validation (empty email)",
      "success": true,
      "details": "Invalid email correctly rejected",
      "timestamp": "2025-09-02T13:22:33.629686",
      "response_data": null
    },
    {
      "test": "Password Validation (too short - 5 chars)",
      "success": false,
      "details": "Expected 400/422, got: 500",
      "timestamp": "2025-09-02T13:22:33.677685",
      "response_data": {
        "detail": "Failed to register company: "
      }
    },
    {
      "test": "Password Validation (too short - 7 chars)",
      "success": false,
      "details": "Expected 400/422, got: 500",
      "timestamp": "2025-09-02T13:22:33.685103",
      "response_data": {
        "detail": "Failed to register company: "
      }
    },
    {
      "test": "Password Validation (empty password)",
      "success": false,
      "details": "Expected 400/422, got: 500",
      "timestamp": "2025-09-02T13:22:33.692240",
      "response_data": {
        "detail": "Failed to register company: "
      }
    },
    {
      "test": "Name Validation (too short - 1 char)",
      "success": false,
      "details": "Expected 400/422, got: 500",
      "timestamp": "2025-09-02T13:22:33.739826",
      "response_data": {
        "detail": "Failed to register company: "
      }
    },
    {
      "test": "Name Validation (empty name)",
      "success": false,
      "details": "Expected 400/422, got: 500",
      "timestamp": "2025-09-02T13:22:33.747357",
      "response_data": {
        "detail": "Failed to register company: "
      }
    },
    {
      "test": "First Registration (Duplicate Test)",
      "success": false,
      "details": "First registration failed: 500",
      "timestamp": "2025-09-02T13:22:33.754359",
      "response_data": {
        "detail": "Failed to register company: "
      }
    },
    {
      "test": "Duplicate Email Registration",
      "success": false,
      "details": "Expected 400, got: 500",
      "timestamp": "2025-09-02T13:22:33.802095",
      "response_data": {
        "detail": "Failed to register company: "
      }
    },
    {
      "test": "Missing Fields (all fields missing)",
      "success": true,
      "details": "Missing fields correctly rejected",
      "timestamp": "2025-09-02T13:22:33.808508",
      "response_data": null
    },
    {
      "test": "Missing Fields (missing electronic_id, name, email, password)",
      "success": true,
      "details": "Missing fields correctly rejected",
      "timestamp": "2025-09-02T13:22:33.854583",
      "response_data": null
    },
    {
      "test": "Missing Fields (missing name, email, password)",
      "success": true,
      "details": "Missing fields correctly rejected",
      "timestamp": "2025-09-02T13:22:33.901565",
      "response_data": null
    },
    {
      "test": "Missing Fields (missing email, password)",
      "success": true,
      "details": "Missing fields correctly rejected",
      "timestamp": "2025-09-02T13:22:33.907425",
      "response_data": null
    },
    {
      "test": "Missing Fields (missing password)",
      "success": true,
      "details": "Missing fields correctly rejected",
      "timestamp": "2025-09-02T13:22:33.912935",
      "response_data": null
    },
    {
      "test": "User Creation Test Setup",
      "success": false,
      "details": "Failed to create test user: 500",
      "timestamp": "2025-09-02T13:22:33.960538",
      "response_data": {
        "detail": "Failed to register company: "
      }
    },
    {
      "test": "FastAPI-Users Integration",
      "success": false,
      "details": "Integration test failed: 500",
      "timestamp": "2025-09-02T13:22:33.968282",
      "response_data": {
        "detail": "Failed to register company: "
      }
    },
    {
      "test": "Moving Draft Creation (varetransport)",
      "success": true,
      "details": "Draft created with subcategory: varetransport",
      "timestamp": "2025-09-02T13:22:34.018031",
      "response_data": null
    },
    {
      "test": "Moving Draft Creation (flyttebyra)",
      "success": true,
      "details": "Draft created with subcategory: flyttebyra",
      "timestamp": "2025-09-02T13:22:34.028225",
      "response_data": null
    },
    {
      "test": "Moving Draft Creation (avfallshandtering)",
      "success": true,
      "details": "Draft created with subcategory: avfallshandtering",
      "timestamp": "2025-09-02T13:22:34.077867",
      "response_data": null
    },
    {
      "test": "Moving Draft Creation (transportBilBat)",
      "success": true,
      "details": "Draft created with subcategory: transportBilBat",
      "timestamp": "2025-09-02T13:22:34.087042",
      "response_data": null
    },
    {
      "test": "Moving Draft Creation (annetFlytting)",
      "success": true,
      "details": "Draft created with subcategory: annetFlytting",
      "timestamp": "2025-09-02T13:22:34.096597",
      "response_data": null
    },
    {
      "test": "Moving Draft Creation (persontransport)",
      "success": true,
      "details": "Draft created with subcategory: persontransport",
      "timestamp": "2025-09-02T13:22:34.146428",
      "response_data": null
    },
    {
      "test": "Moving Draft Creation (pianotransport)",
      "success": true,
      "details": "Draft created with subcategory: pianotransport",
      "timestamp": "2025-09-02T13:22:34.155262",
      "response_data": null
    },
    {
      "test": "Moving Draft Creation (godstransport)",
      "success": true,
      "details": "Draft created with subcategory: godstransport",
      "timestamp": "2025-09-02T13:22:34.162942",
      "response_data": null
    },
    {
      "test": "Moving Draft Update",
      "success": true,
      "details": "Draft updated successfully for subcategory: varetransport",
      "timestamp": "2025-09-02T13:22:34.216844",
      "response_data": null
    },
    {
      "test": "Moving Draft Submission",
      "success": true,
      "details": "Draft submitted successfully with subcategory: varetransport",
      "timestamp": "2025-09-02T13:22:34.229497",
      "response_data": null
    },
    {
      "test": "Moving Subcategory Storage",
      "success": true,
      "details": "Subcategory storage test completed for: varetransport",
      "timestamp": "2025-09-02T13:22:34.229534",
      "response_data": null
    },
    {
      "test": "Non-Moving Regression (handcraft)",
      "success": true,
      "details": "Category handcraft still works without subcategory",
      "timestamp": "2025-09-02T13:22:34.278885",
      "response_data": null
    },
    {
      "test": "Non-Moving Regression (bathroom)",
      "success": true,
      "details": "Category bathroom still works without subcategory",
      "timestamp": "2025-09-02T13:22:34.288055",
      "response_data": null
    },
    {
      "test": "Non-Moving Regression (automotive)",
      "success": true,
      "details": "Category automotive still works without subcategory",
      "timestamp": "2025-09-02T13:22:34.336984",
      "response_data": null
    },
    {
      "test": "Moving Without Subcategory",
      "success": true,
      "details": "Moving category works without subcategory field",
      "timestamp": "2025-09-02T13:22:34.345729",
      "response_data": null
    },
    {
      "test": "Invalid Subcategory",
      "success": true,
      "details": "Invalid subcategory accepted (backend doesn't validate subcategory values)",
      "timestamp": "2025-09-02T13:22:34.394650",
      "response_data": null
    },
    {
      "test": "Cleaning Draft Creation (houseCleaning)",
      "success": true,
      "details": "Draft created with subcategory: houseCleaning",
      "timestamp": "2025-09-02T13:22:34.404916",
      "response_data": null
    },
    {
      "test": "Cleaning Draft Creation (officeCleaning)",
      "success": true,
      "details": "Draft created with subcategory: officeCleaning",
      "timestamp": "2025-09-02T13:22:34.413634",
      "response_data": null
    },
    {
      "test": "Cleaning Draft Creation (deepCleaning)",
      "success": true,
      "details": "Draft created with subcategory: deepCleaning",
      "timestamp": "2025-09-02T13:22:34.463775",
      "response_data": null
    },
    {
      "test": "Cleaning Draft Creation (carCleaning)",
      "success": true,
      "details": "Draft created with subcategory: carCleaning",
      "timestamp": "2025-09-02T13:22:34.473040",
      "response_data": null
    },
    {
      "test": "Cleaning Draft Creation (postConstruction)",
      "success": true,
      "details": "Draft created with subcategory: postConstruction",
      "timestamp": "2025-09-02T13:22:34.522466",
      "response_data": null
    },
    {
      "test": "Cleaning Draft Creation (wasteRemoval)",
      "success": true,
      "details": "Draft created with subcategory: wasteRemoval",
      "timestamp": "2025-09-02T13:22:34.532207",
      "response_data": null
    },
    {
      "test": "Cleaning Draft Creation (eventCleaning)",
      "success": true,
      "details": "Draft created with subcategory: eventCleaning",
      "timestamp": "2025-09-02T13:22:34.580723",
      "response_data": null
    },
    {
      "test": "Cleaning Draft Creation (industrialCleaning)",
      "success": true,
      "details": "Draft created with subcategory: industrialCleaning",
      "timestamp": "2025-09-02T13:22:34.589829",
      "response_data": null
    },
    {
      "test": "Cleaning Draft Creation (windowCleaning)",
      "success": true,
      "details": "Draft created with subcategory: windowCleaning",
      "timestamp": "2025-09-02T13:22:34.598659",
      "response_data": null
    },
    {
      "test": "Cleaning Draft Creation (gardenCleaning)",
      "success": true,
      "details": "Draft created with subcategory: gardenCleaning",
      "timestamp": "2025-09-02T13:22:34.647979",
      "response_data": null
    },
    {
      "test": "Cleaning Draft Creation (carpetCleaning)",
      "success": true,
      "details": "Draft created with subcategory: carpetCleaning",
      "timestamp": "2025-09-02T13:22:34.656387",
      "response_data": null
    },
    {
      "test": "Cleaning Draft Creation (movingCleaning)",
      "success": true,
      "details": "Draft created with subcategory: movingCleaning",
      "timestamp": "2025-09-02T13:22:34.704761",
      "response_data": null
    },
    {
      "test": "Cleaning Draft Creation (pressureWashing)",
      "success": true,
      "details": "Draft created with subcategory: pressureWashing",
      "timestamp": "2025-09-02T13:22:34.753968",
      "response_data": null
    },
    {
      "test": "Cleaning Draft Creation (storageCleaning)",
      "success": true,
      "details": "Draft created with subcategory: storageCleaning",
      "timestamp": "2025-09-02T13:22:34.763132",
      "response_data": null
    },
    {
      "test": "Cleaning Draft Creation (specialized)",
      "success": true,
      "details": "Draft created with subcategory: specialized",
      "timestamp": "2025-09-02T13:22:34.811580",
      "response_data": null
    },
    {
      "test": "Cleaning Draft Creation (otherCleaning)",
      "success": true,
      "details": "Draft created with subcategory: otherCleaning",
      "timestamp": "2025-09-02T13:22:34.820226",
      "response_data": null
    },
    {
      "test": "Cleaning Draft Update",
      "success": true,
      "details": "Draft updated successfully for subcategory: houseCleaning",
      "timestamp": "2025-09-02T13:22:34.831584",
      "response_data": null
    },
    {
      "test": "Cleaning Draft Submission",
      "success": true,
      "details": "Draft submitted successfully with subcategory: houseCleaning",
      "timestamp": "2025-09-02T13:22:34.883785",
      "response_data": null
    },
    {
      "test": "Cleaning Subcategory Persistence Verification",
      "success": true,
      "details": "Subcategory houseCleaning persistence verified through create \u2192 update \u2192 submit workflow",
      "timestamp": "2025-09-02T13:22:34.883829",
      "response_data": null
    },
    {
      "test": "Cleaning Without Subcategory",
      "success": true,
      "details": "Cleaning jobs can be created without subcategory field",
      "timestamp": "2025-09-02T13:22:34.892537",
      "response_data": null
    },
    {
      "test": "Cleaning Subcategory Null Check",
      "success": true,
      "details": "Subcategory correctly null when not provided",
      "timestamp": "2025-09-02T13:22:34.892570",
      "response_data": null
    },
    {
      "test": "Non-Cleaning Category Compatibility",
      "success": true,
      "details": "Non-cleaning categories work without subcategory field",
      "timestamp": "2025-09-02T13:22:34.901371",
      "response_data": null
    },
    {
      "test": "Cleaning Missing Subcategory Validation",
      "success": true,
      "details": "Cleaning jobs work without subcategory (validation passes)",
      "timestamp": "2025-09-02T13:22:34.949892",
      "response_data": null
    },
    {
      "test": "Invalid Cleaning Subcategory",
      "success": true,
      "details": "Invalid cleaning subcategory accepted (backend doesn't validate subcategory values)",
      "timestamp": "2025-09-02T13:22:34.958275",
      "response_data": null
    },
    {
      "test": "POST /api/automotive/create-job (Valid Complete)",
      "success": true,
      "details": "Job created successfully with ID: e486e772-f39a-4e10-b242-66290f15eae0",
      "timestamp": "2025-09-02T13:22:35.011705",
      "response_data": null
    },
    {
      "test": "POST /api/automotive/create-job (Minimal Data)",
      "success": true,
      "details": "Job created with only license plate",
      "timestamp": "2025-09-02T13:22:35.019539",
      "response_data": null
    },
    {
      "test": "POST /api/automotive/create-job (Missing License Plate)",
      "success": true,
      "details": "Validation error returned as expected for missing license_plate",
      "timestamp": "2025-09-02T13:22:35.025357",
      "response_data": null
    },
    {
      "test": "GET /api/automotive/job/{id}",
      "success": true,
      "details": "Job retrieved successfully: ABC123",
      "timestamp": "2025-09-02T13:22:35.075069",
      "response_data": null
    },
    {
      "test": "GET /api/automotive/job/{id} (Not Found)",
      "success": true,
      "details": "Non-existent job returns 404 as expected",
      "timestamp": "2025-09-02T13:22:35.123831",
      "response_data": null
    },
    {
      "test": "Automotive Job Database Storage",
      "success": true,
      "details": "Job data correctly stored in automotive_jobs collection",
      "timestamp": "2025-09-02T13:22:35.131798",
      "response_data": null
    },
    {
      "test": "Job Test Customer Registration",
      "success": true,
      "details": "Customer registered for job testing",
      "timestamp": "2025-09-02T13:22:35.253901",
      "response_data": null
    },
    {
      "test": "Job Test Customer Login",
      "success": true,
      "details": "Customer logged in for job testing",
      "timestamp": "2025-09-02T13:22:35.324009",
      "response_data": null
    },
    {
      "test": "POST /api/job-requests (Unauthenticated)",
      "success": false,
      "details": "Expected 401, got: 422",
      "timestamp": "2025-09-02T13:22:35.331299",
      "response_data": {
        "detail": [
          {
            "type": "value_error",
            "loc": [
              "body",
              "description"
            ],
            "msg": "Value error, Description must be at least 30 characters long",
            "input": "Test l\u00fdsing \u00e1 verkefni",
            "ctx": {
              "error": {}
            },
            "url": "https://errors.pydantic.dev/2.11/v/value_error"
          }
        ]
      }
    },
    {
      "test": "GET /api/job-requests (Unauthenticated)",
      "success": false,
      "details": "Unexpected response: 500",
      "timestamp": "2025-09-02T13:22:35.377445",
      "response_data": "Internal Server Error"
    },
    {
      "test": "POST /api/job-requests (Valid Data)",
      "success": false,
      "details": "Job creation failed: 422",
      "timestamp": "2025-09-02T13:22:35.385651",
      "response_data": {
        "detail": [
          {
            "type": "value_error",
            "loc": [
              "body",
              "description"
            ],
            "msg": "Value error, Description must be at least 30 characters long",
            "input": "Test l\u00fdsing \u00e1 verkefni",
            "ctx": {
              "error": {}
            },
            "url": "https://errors.pydantic.dev/2.11/v/value_error"
          }
        ]
      }
    },
    {
      "test": "GET /api/job-requests (User Jobs)",
      "success": false,
      "details": "No jobs found for user, expected at least 1",
      "timestamp": "2025-09-02T13:22:35.395595",
      "response_data": null
    },
    {
      "test": "User Jobs Retrieval Test",
      "success": false,
      "details": "Request failed: 500, message='Attempt to decode JSON with unexpected mimetype: text/plain; charset=utf-8', url='https://icejobs.preview.emergentagent.com/api/job-requests/'",
      "timestamp": "2025-09-02T13:22:35.424374",
      "response_data": null
    },
    {
      "test": "Job Data Verification Test",
      "success": false,
      "details": "No customer session or job ID available",
      "timestamp": "2025-09-02T13:22:35.424421",
      "response_data": null
    },
    {
      "test": "Job Status Check Test",
      "success": false,
      "details": "No customer session or job ID available",
      "timestamp": "2025-09-02T13:22:35.424432",
      "response_data": null
    },
    {
      "test": "Error Handling (404)",
      "success": true,
      "details": "Non-existent project returns 404",
      "timestamp": "2025-09-02T13:22:35.430771",
      "response_data": null
    },
    {
      "test": "Error Handling (Language Fallback)",
      "success": true,
      "details": "Invalid language falls back to English",
      "timestamp": "2025-09-02T13:22:35.442305",
      "response_data": null
    },
    {
      "test": "Error Handling (Duplicate Registration)",
      "success": true,
      "details": "Duplicate email registration correctly rejected",
      "timestamp": "2025-09-02T13:22:35.449206",
      "response_data": null
    },
    {
      "test": "Error Handling (Invalid Login)",
      "success": true,
      "details": "Invalid credentials correctly rejected",
      "timestamp": "2025-09-02T13:22:35.558850",
      "response_data": null
    }
  ],
  "timestamp": "2025-09-02T13:22:35.559915"
}